@page "/"
@using LangVoyageWebApp.Components
@inject NavigationManager NavigationManager
@inject LanguageService LangService

<PageTitle>Learning Center</PageTitle>

<h1>Learning Center</h1>

<br/>

<div class="d-flex justify-content-around">
    <CircularProgress Progress="@GetNounProgress()"
    Size="150"
    FillColor="blue"
    BackgroundColor="#eee"
    InnerText="@NounOverviewText"
    OnClickCallback="@(() => NavigationManager.NavigateTo("/nouns"))">
        <IconContent>
            <i class="fa-solid fa-book"></i>
        </IconContent>
    </CircularProgress>

    <CircularProgress Progress="15"
    Size="150"
    FillColor="green"
    BackgroundColor="#eee"
    InnerText="Sentences"
    OnClickCallback="@(() => NavigationManager.NavigateTo("/sentences"))">
        <IconContent>
            <i class="fa-solid fa-pen"></i>
        </IconContent>
    </CircularProgress>

    <CircularProgress Progress="50"
    Size="150"
    FillColor="red"
    BackgroundColor="#eee"
    InnerText="Speaking"
    OnClickCallback="@(() => NavigationManager.NavigateTo("/speaking"))">
        <IconContent>
            <i class="fa-solid fa-microphone"></i>
        </IconContent>
    </CircularProgress>

    <CircularProgress Progress="30"
    Size="150"
    FillColor="orange"
    BackgroundColor="#eee"
    InnerText="Listening"
    OnClickCallback="@(() => NavigationManager.NavigateTo("/listening"))">
        <IconContent>
            <i class="fa-solid fa-headphones"></i>
        </IconContent>
    </CircularProgress>
</div>

@code {

    private LearningProgressResponse? LearningProgress { get; set; }
    private string NounOverviewText
    {
        get
        {
            if (LearningProgress == null)
            {
                return "Nouns";
            }

            return $"Nouns: {LearningProgress.NounProgresses.Sum()} / {LearningProgress.TotalNouns}";
        }
    }

    protected override async Task OnInitializedAsync()
    {
        LearningProgress = await LangService.GetLearningProgressAsync(1);
    }

    private int GetNounProgress()
    {
        if (LearningProgress == null)
        {
            return 0;
        }

        return (int)((float)LearningProgress.NounProgresses.Sum() / LearningProgress.TotalNouns);
    }

}
