@page "/"
@using LangVoyageWebApp.Components
@inject NavigationManager NavigationManager

<PageTitle>Learning Center</PageTitle>

<h1>Learning Center</h1>

<p class="lead text-muted mb-4">Track your progress across different language learning areas</p>

<div class="learning-progress-container">
    <div class="progress-card">
        <CircularProgress Progress="@GetNounProgress()"
        Size="160"
        FillColor="var(--nouns-color)"
        BackgroundColor="var(--gray-200)"
        InnerText="@NounOverviewText"
        Thickness="12"
        OnClickCallback="@(() => NavigationManager.NavigateTo("/nouns"))">
            <IconContent>
                <i class="fa-solid fa-book" style="font-size: 2rem; color: var(--nouns-color);"></i>
            </IconContent>
        </CircularProgress>
        <h5 class="mt-3 mb-1" style="color: var(--nouns-color);">Nouns</h5>
        <p class="text-muted small">Learn vocabulary building blocks</p>
    </div>

    <div class="progress-card">
        <CircularProgress Progress="15"
        Size="160"
        FillColor="var(--sentences-color)"
        BackgroundColor="var(--gray-200)"
        InnerText="Sentences"
        Thickness="12"
        OnClickCallback="@(() => NavigationManager.NavigateTo("/sentences"))">
            <IconContent>
                <i class="fa-solid fa-pen" style="font-size: 2rem; color: var(--sentences-color);"></i>
            </IconContent>
        </CircularProgress>
        <h5 class="mt-3 mb-1" style="color: var(--sentences-color);">Sentences</h5>
        <p class="text-muted small">Practice sentence structure</p>
    </div>

    <div class="progress-card">
        <CircularProgress Progress="50"
        Size="160"
        FillColor="var(--speaking-color)"
        BackgroundColor="var(--gray-200)"
        InnerText="Speaking"
        Thickness="12"
        OnClickCallback="@(() => NavigationManager.NavigateTo("/speaking"))">
            <IconContent>
                <i class="fa-solid fa-microphone" style="font-size: 2rem; color: var(--speaking-color);"></i>
            </IconContent>
        </CircularProgress>
        <h5 class="mt-3 mb-1" style="color: var(--speaking-color);">Speaking</h5>
        <p class="text-muted small">Improve pronunciation skills</p>
    </div>

    <div class="progress-card">
        <CircularProgress Progress="30"
        Size="160"
        FillColor="var(--listening-color)"
        BackgroundColor="var(--gray-200)"
        InnerText="Listening"
        Thickness="12"
        OnClickCallback="@(() => NavigationManager.NavigateTo("/listening"))">
            <IconContent>
                <i class="fa-solid fa-headphones" style="font-size: 2rem; color: var(--listening-color);"></i>
            </IconContent>
        </CircularProgress>
        <h5 class="mt-3 mb-1" style="color: var(--listening-color);">Listening</h5>
        <p class="text-muted small">Enhance comprehension abilities</p>
    </div>
</div>

@code {
    [Inject]
    private LanguageService LangService { get; set; } = default!;
    
    private LearningProgressResponse? LearningProgress { get; set; }
    
    private string NounOverviewText
    {
        get
        {
            if (LearningProgress == null)
            {
                return "Nouns";
            }

            return $"Nouns: {LearningProgress.NounProgresses.Sum()} / {LearningProgress.TotalNouns}";
        }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            LearningProgress = await LangService.GetLearningProgressAsync(1);
        }
        catch
        {
            // Handle error gracefully - could be that the API is not available
            LearningProgress = null;
        }
    }

    private int GetNounProgress()
    {
        if (LearningProgress == null)
        {
            return 0;
        }

        return (int)((float)LearningProgress.NounProgresses.Sum() / LearningProgress.TotalNouns * 100);
    }
}
