// <auto-generated />
using System;
using LangVoyageServer.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LangVoyageServer.Migrations
{
    [DbContext(typeof(LangServerDbContext))]
    [Migration("20250703174135_NounVersion_RowVersion")]
    partial class NounVersion_RowVersion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("LangVoyageServer.Models.LanguageNoun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Noun")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Plural")
                        .HasColumnType("TEXT");

                    b.Property<string>("PluralArticle")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Nouns");
                });

            modelBuilder.Entity("LangVoyageServer.Models.LanguageNounProgressView", b =>
                {
                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastPractised")
                        .HasColumnType("TEXT");

                    b.Property<string>("Noun")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NounId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NounLevel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Plural")
                        .HasColumnType("TEXT");

                    b.Property<string>("PluralArticle")
                        .HasColumnType("TEXT");

                    b.Property<int>("TimeFrame")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserLanguageLevel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable((string)null);

                    b.ToView("NounProgressView", (string)null);
                });

            modelBuilder.Entity("LangVoyageServer.Models.NounProgress", b =>
                {
                    b.Property<int>("UserProfileId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NounId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastPractised")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<int>("TimeFrame")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserProfileId", "NounId");

                    b.ToTable("NounProgresses");
                });

            modelBuilder.Entity("LangVoyageServer.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LanguageLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("A1");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("LangVoyageServer.Models.NounProgress", b =>
                {
                    b.HasOne("LangVoyageServer.Models.UserProfile", null)
                        .WithMany("NounProgresses")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LangVoyageServer.Models.UserProfile", b =>
                {
                    b.Navigation("NounProgresses");
                });
#pragma warning restore 612, 618
        }
    }
}
